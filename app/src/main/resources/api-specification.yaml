openapi: 3.0.3
info:
  title: Music API
  version: '1.0'
  description: Music API
  contact:
    name: API Support
    email: apisupport@music.com.au
paths:
  /artist:
    get:
      summary: Get artists
      operationId: get-artists
      tags:
        - Artist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      summary: Create artist
      operationId: create-artist
      tags:
        - Artist
      requestBody:
        $ref: '#/components/requestBodies/ArtistRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          $ref: '#/components/responses/BadRequest'
  /album:
    post:
      summary: Create album
      operationId: create-album
      tags:
        - Album
      requestBody:
        $ref: '#/components/requestBodies/AlbumRequestBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          $ref: '#/components/responses/BadRequest'
  /album/{albumId}:
    get:
      summary: Get album
      operationId: get-album-by-id
      tags:
        - Album
      parameters:
        - $ref: '#/components/parameters/AlbumId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          $ref: '#/components/responses/BadRequest'
components:
  parameters:
    AlbumId:
      description: Album Id
      in: path
      name: albumId
      required: true
      schema:
        type: string
        example: '12345'
  requestBodies:
    ArtistRequestBody:
      description: Artist request body
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArtistBase'
    AlbumRequestBody:
      description: Album request body
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlbumBase'
  schemas:
    AlbumBase:
      description: Album
      type: object
      properties:
        name:
          type: string
          example: 'Nevermind'
        genre:
          $ref: '#/components/schemas/Genre'
        releaseDate:
          type: string
          format: date
          description: The date the album was released
          example: '2021-06-23'
        artistId:
          type: integer
          format: int64
          description: Must be a valid artistId
          example: 12345
      required:
        - name
        - genre
        - artistId
    Album:
      description: Album with all details
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
      allOf:
        - $ref: '#/components/schemas/AlbumBase'
      required:
        - id
        - name
        - genre
        - artistId
    ArtistBase:
      description: Base artist
      type: object
      properties:
        name:
          type: string
          example: Nirvana
        genre:
          $ref: '#/components/schemas/Genre'
      required:
        - name
        - genre
    Artist:
      description: Artist with all details
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        albums:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Album'
      allOf:
        - $ref: '#/components/schemas/ArtistBase'
      required:
        - id
        - name
        - genre
        - albums
    Genre:
      type: string
      description: Genre of music
      enum:
        - Country
        - Grunge
        - Pop
        - Rock
        - Jazz
        - Punk
    Error:
      type: string
      example: Bad Request
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              Error:
                $ref: '#/components/schemas/Error'